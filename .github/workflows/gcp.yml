name: Build and Push to GCR

on:
  push:
    branches: [ "main" ]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    environment: GCP

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: Authenticate GCP
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Authenticate GCR
      uses: 'docker/login-action@v1'
      with:
        registry: 'gcr.io' # or REGION-docker.pkg.dev
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --build-arg MYSQL_USER='${{ secrets.MYSQL_USER }}' \
          --build-arg MYSQL_PWD='${{ secrets.MYSQL_PWD }}' \
          --build-arg MYSQL_HOST='${{ secrets.MYSQL_HOST }}' \
          --build-arg MYSQL_PORT='${{ secrets.MYSQL_PORT }}' \
          --build-arg MYSQL_DB='${{ secrets.MYSQL_DB }}' \
          --build-arg MYSQL_TABLE='${{ secrets.MYSQL_TABLE }}' \
          --tag gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_IMAGE }}:${{ secrets.GCP_TAG }} \
          .

    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io
        docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_IMAGE }}

